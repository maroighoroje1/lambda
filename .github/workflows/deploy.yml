# .github/workflows/deploy.yml
name: Deploy Serverless App

on:
  push:
    branches:
      - main # Triggers on push to main branch (for prod deployment)
      - develop # Triggers on push to develop branch (for dev deployment)

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1 # Set your AWS Region (e.g., us-east-1, eu-west-1)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5 # Action to set up Python
        with:
          python-version: '3.9' # Specify your Python runtime version, e.g., '3.9', '3.10', '3.11', '3.12'

      - name: Install Serverless Framework CLI
        run: npm install -g serverless

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Lambda dependencies
        run: |
          pip install -r requirements.txt # Install Python dependencies from requirements.txt
        # 'working-directory: .' is implicitly the default, as your files are at the repo root.
        # So, no 'working-directory' line is needed here.

      - name: Serverless Deploy to Development Environment
        if: github.ref == 'refs/heads/develop' # Only runs for pushes to the 'develop' branch
        env:
          SLS_ORG_TOKEN: ${{ secrets.SERVERLESS_ACCESS_KEY }} # Required for Serverless Framework V4 authentication
        run: |
          serverless deploy --stage dev --verbose # Deploy to 'dev' stage
        # No 'working-directory' needed as project files are at repo root.

      - name: Serverless Deploy to Production Environment
        if: github.ref == 'refs/heads/main' # Only runs for pushes to the 'main' branch
        env:
          SLS_ORG_TOKEN: ${{ secrets.SERVERLESS_ACCESS_KEY }} # Required for Serverless Framework V4 authentication
        run: |
          serverless deploy --stage prod --verbose # Deploy to 'prod' stage
        # No 'working-directory' needed as project files are at repo root.
